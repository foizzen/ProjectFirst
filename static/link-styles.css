@font-face {
    font-family: 'Inter';
    src: url(./fonts/font-inter/Inter18pt-Regular.woff2) format(woff2);
    font-weight: 400;
    font-style: normal;
    font-display: swap;
}
@font-face {
    font-family: 'Inter';
    src: url(./fonts/font-inter/Inter18pt-Black.woff2) format(woff2);
    font-weight: 900;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'preloader';
    src: url(./fonts/preloader-font/Tagesschrift-Regular.woff2) format(woff2);
    font-weight: 900;
    font-style: normal;
    font-display: swap;
}


/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html:has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }

 svg * [fill] {fill: var(--color-yellow);}
 svg * [stroke] {stroke: var(--color-yellow);}



:root{
    --background-color-dark:#000000;
    --color-yellow:#EDF738;
    
    --padding-inline:89px;
    --margin-inline:60px;

    --transition-duration: 0.2s;

    --font-family:'Inter';
}

.preloader-wave {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    opacity: 1;
    transition: opacity 0.5s ease;
    pointer-events: none;
    }

.wave {
    color: var(--color-yellow);
    -webkit-box-reflect: below 0 linear-gradient(transparent, rgba(255, 255, 255, 0.2));
}

.wave span {
    display: inline-block;
    font-size: 5vw;
    font-family: 'preloader';
    animation: wave 1s forwards;
    animation-delay: calc(0.2s * var(--i));
}

@keyframes wave {
    0%, 40%, 100% {
        transform: translateY(0);
    }
    20% {
        transform: translateY(-20px);
    }
}

a,
button,
input,
textarea,
svg * {
    transition-duration: var(--transition-duration);
}

.visually-hidden{
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important; 
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.title-big{
  font-size: clamp(50px,5vw,80px);
  letter-spacing: 0.1em;
}

p,
h1,
h2,
h3,
h4,
h5{
  color: var(--color-yellow);
  font-family: var(--font-family);

  text-transform:uppercase ;
}

h1,h2{
  font-weight: 900;
  font-family: var(--font-family);
}

body{
    background-color: var(--background-color-dark);
}

section,
footer{

  margin-inline: 20px;
}

header{
  height: 100px;
  display: grid;
  grid-template-columns: 10% 1fr 10%;
  align-items: center;
  justify-items: center;
  text-align: center;
  margin-inline: 20px;  
}

.header-button.has-username::before{

  content: attr(data-title);
  top:0.7em;
  left:-7em;
  line-height: 1;
  position: absolute;
  z-index: -1;
  font-size:1em;
  font-family: 'Inter';
  font-weight: 900;
  text-decoration: none;
  color: var(--color-yellow);

}

.header-button{
  position: relative;  
  margin-left: 70%;
}

.text-container{
    padding-top: 50px;
    margin-inline: 50px ;
    text-align: center;
    font-size: clamp(15px,1.2em,22px);
    letter-spacing: 0.05em;
}

.image-container{
  display: flex;
  justify-content: center;
}

.container{
  width: 80%;
  height: 400px;
  display: flex;
  justify-content: center;
  gap: 15px;
}

.container.over-four img{
  width: 11%;
  height: 100%;
  object-fit: cover;
  border-radius: 10px;
  border: 2px solid whitesmoke;
  transition: all ease-in-out 0.5s;
}

.container.under-four img{
  width: 20%;
  height: 100%;
  object-fit: cover;
  border-radius: 10px;
  border: 2px solid whitesmoke;
  transition: all ease-in-out 0.5s;
}

.container img:hover{
  width: 35%;
  box-shadow: 0 0 15px whitesmoke;
}

.waiting-people{
  display: grid;
  grid-template-columns: 50% 40% 10%;
  flex-direction: column;
  justify-content:center;
  align-items: center;
}

.waiters{
  font-family: 'Inter';
  font-size: 32px;
}

button {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  touch-action: manipulation;
  width: 200px;
  
}

.shadow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: hsl(0deg 0% 0% / 0.25);
  will-change: transform;
  transform: translateY(2px);
  transition: transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

.edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
    to left,
    hsl(47, 87%, 56%) 0%,
    hsl(47 87% 32%) 8%,
    hsl(47 87% 32%) 92%,
    hsl(47 87% 16%) 100%
  );
}

.front {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  font-size: 1.3rem;
  color: black;
  font-family: 'Inter';
  background: hsl(47, 87%, 56%) 0%;
  will-change: transform;
  transform: translateY(-4px);
  transition: transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

button:hover {
  filter: brightness(110%);
}

button:hover .front {
  transform: translateY(-6px);
  transition: transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

button:active .front {
  transform: translateY(-2px);
  transition: transform 34ms;
}

button:hover .shadow {
  transform: translateY(4px);
  transition: transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

button:active .shadow {
  transform: translateY(1px);
  transition: transform 34ms;
}

button:focus:not(:focus-visible) {
  outline: none;
}

footer{
  display: grid;
  grid-template-columns: 10% 1fr 1fr 10%;
  justify-content: center;
  text-align: center;
  margin-top: 20px;
}

.countdown-text{
    font-family: 'Inter';
    font-size: 32px;
}

.waiting-span,
.waiting-text {
  color: var(--color-yellow);
  font-family: 'Inter';
}

.text-error{
  color: red;
  font-size: 0.85em;
  font-family: 'Inter';
  font-weight: 900;

}